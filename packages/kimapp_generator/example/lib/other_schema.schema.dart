// GENERATED CODE - DO NOT MODIFY BY HAND

// **************************************************************************
// KimappSchemaGenerator
// **************************************************************************

// ignore_for_file: invalid_annotation_target, unused_import, require_trailing_commas
import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:kimapp/kimapp.dart';

import 'other_schema.dart';

part 'other_schema.schema.freezed.dart';
part 'other_schema.schema.g.dart';

/// Defines the table structure for Other.
/// This class provides constant string values for table and column names,
/// facilitating type-safe database operations and query building.
class OtherTable {
  const OtherTable._();

  /// The name of the database table for Other entities.
  /// Use this constant for constructing SQL queries to ensure consistency.
  static const String table = "others";
}

/// Base model class for OtherModel.
@freezed
class OtherModel with _$OtherModel {
  const OtherModel._();

  /// Constructor for OtherModel.
  ///
  /// This class was generated by the Kimapp generator based on KimappSchema.
  ///
  /// Table Mode: `enabled` (`others`)
  ///
  /// Fields:
  @TableModel(OtherModel.tableName)
  @JsonSerializable(explicitToJson: true)
  const factory OtherModel() = _OtherModel;

  /// Creates an instance of OtherModel from a JSON map.
  factory OtherModel.fromJson(Map<String, dynamic> json) =>
      _$OtherModelFromJson(json);

  /// Supabase table configuration for this model.
  static const TableBuilder table = _tableOtherModel;

  /// Table name: `others`
  static const String tableName = "others";
}
