name: kimapp_packages
repository: https://github.com/pckimlong/kimapp
publish_to: none
environment:
  sdk: ">=3.6.0 <4.0.0"

workspace:
  # Unpublished packages
  - packages/kimapp
  - packages/kimapp_generator
  - packages/kimapp_utils
  - packages/kimapp_supabase_helper

  # Published packages
  - pubs/autoverpod
  - pubs/autoverpod_generator

  # Examples
  - pubs/autoverpod_generator/example
  - packages/kimapp_generator/example


dev_dependencies:
  melos: ^7.0.0-dev.7
  build_runner: ^2.4.15

melos:
  command:
    version:
      # Only allow versioning to happen on main branch.
      branch: master
      # Generates a link to a prefilled GitHub release creation page.
      releaseUrl: true
      includeCommitId: true
      linkToCommits: true
      message: "chore(release): publish packages"
      workspaceChangelog: true

  version:
    # Define versioning strategy for different package groups
    packageFilters:
      scope:
        - "kimapp*"
        - "autoverpod*"
    
  scripts:
    lint:all:
      steps:
        - analyze
        - format
      description: Run all static analysis checks.
      
    upgrade: melos exec flutter pub upgrade

    analyze:
      run: melos exec dart analyze .
      description: Run `dart analyze` for all packages.

    format-check:
      run: melos exec dart format . --set-exit-if-changed
      description: Run `dart format` checks for all packages.

    update_deps:
      run: melos exec -- flutter pub get
      description: Update dependencies in all packages

    format:
      run: melos exec -- dart format .
      description: Format Dart code in all packages
      
    fix_all:
      run: melos exec -- dart fix --apply .
      description: Fix all Dart code in all packages

    build_kimapp:
      run: melos exec --scope="kimapp" -- dart run build_runner build --delete-conflicting-outputs
      description: Run build_runner in kimapp packages

    build_all:
      run: |
        melos exec -c 1 --depends-on="build_runner" -- "dart run build_runner build --delete-conflicting-outputs"
      description: Run build_runner in all packages with concurrency 1 to handle dependencies
      
    publish_dry:
      run: melos exec -- flutter pub publish --dry-run
      description: Run a dry-run of publishing all packages
      
    publish:
      run: melos exec -- flutter pub publish
      description: Publish all packages to pub.dev
      
    test:
      run: melos exec --dir-exists="test" -- flutter test
      description: Run tests in packages that have a test folder
      
    clean:
      run: melos exec -- flutter clean
      description: Clean all packages
      
    bootstrap:
      run: melos bootstrap
      description: Bootstrap the project by getting all dependencies

    # New scripts for versioning and releasing
    version_kimapp:
      description: Version kimapp packages only
      run: melos version --scope="kimapp*" --graduate

    version_autoverpod:
      description: Version autoverpod packages only
      run: melos version --scope="autoverpod*" --graduate

    prerelease:
      description: Create a prerelease version
      run: melos version --prerelease

    version_check:
      description: Check which packages would be versioned
      run: melos version

    changelog:
      description: Generate changelog for all packages
      run: melos changelog

    release:
      description: Create GitHub releases
      run: |
        if [ -z "$MELOS_VERSION" ]; then
          echo "Error: MELOS_VERSION is not set"
          exit 1
        fi
        gh release create "v$MELOS_VERSION" \
          --title "Release v$MELOS_VERSION" \
          --notes-file CHANGELOG.md

    verify:
      description: Verify all packages
      steps:
        - build_kimapp # Build kimapp packages first
        - build_all
        - analyze
        - test
        - format-check
